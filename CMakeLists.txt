# minimum cmake requirement
cmake_minimum_required(VERSION 3.16)

# project name
project(Acorn)

# set the standard and compile commands export
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 20)

# set the output paths
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG   ${PROJECT_SOURCE_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY         ${PROJECT_SOURCE_DIR}/bin)

# set the build variables
set(BUILD_SHARED_LIBS OFF)
set(BUILD_TESTS OFF)

# set the compiler flags
if (MSVC)
    set(CMAKE_CXX_FLAGS_DEBUG "/bigobj /Zc:__cplusplus")
    set(CMAKE_CXX_FLAGS_RELEASE "/bigobj /Zc:__cplusplus")
else()
    set(CMAKE_CXX_FLAGS_DEBUG "-g -pg -Og -Wall -Wextra -fprofile-arcs -ftest-coverage")
    set(CMAKE_CXX_FLAGS_RELEASE "-march=native -s -O3 -funroll-loops -flto=auto")
endif()

if (WIN32)
    # include the fetch plugin
    include(FetchContent)

    # declare libraries that are better to be downloaded on windows
    FetchContent_Declare(fftw SYSTEM DOWNLOAD_EXTRACT_TIMESTAMP TRUE URL https://www.fftw.org/fftw-3.3.10.tar.gz)

    # download these libraries
    FetchContent_MakeAvailable(fftw)

    # include additional directories
    include_directories(${fftw_SOURCE_DIR}/api)
endif()

# include directories
include_directories(include lib)

# find the necessary packages
find_package(Eigen3 REQUIRED)
find_package(OpenMP REQUIRED)

# add the base library
add_library(acorn_base STATIC src/expression.cpp src/fourier.cpp src/linalg.cpp src/system.cpp src/timer.cpp src/wavefunction.cpp)

# link the base library
target_link_libraries(acorn_base Eigen3::Eigen)

# add subprograms
add_subdirectory(program/expression)
add_subdirectory(program/transform)
add_subdirectory(program/cdyn)
add_subdirectory(program/qdyn)
add_subdirectory(program/ci)
add_subdirectory(program/hf)
add_subdirectory(program/mp)
if (NOT WIN32)
    add_subdirectory(program/integral)
endif()

# enable testing
enable_testing()

# add general tests
add_test(NAME hf                   COMMAND ${CMAKE_MAKE_PROGRAM} hf                   WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME mp2                  COMMAND ${CMAKE_MAKE_PROGRAM} mp2                  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME mp3                  COMMAND ${CMAKE_MAKE_PROGRAM} mp3                  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME fci                  COMMAND ${CMAKE_MAKE_PROGRAM} fci                  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME qdyn_1d_HO_imaginary COMMAND ${CMAKE_MAKE_PROGRAM} qdyn_1d_HO_imaginary WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME qdyn_1d_HO_real      COMMAND ${CMAKE_MAKE_PROGRAM} qdyn_1d_HO_real      WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME qdyn_2d_HO_imaginary COMMAND ${CMAKE_MAKE_PROGRAM} qdyn_2d_HO_imaginary WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME qdyn_2d_HO_real      COMMAND ${CMAKE_MAKE_PROGRAM} qdyn_2d_HO_real      WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME qdyn_3d_HO_imaginary COMMAND ${CMAKE_MAKE_PROGRAM} qdyn_3d_HO_imaginary WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME qdyn_3d_HO_real      COMMAND ${CMAKE_MAKE_PROGRAM} qdyn_3d_HO_real      WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)

# add expected results of general tests
set_property(TEST hf                   PROPERTY PASS_REGULAR_EXPRESSION "FINAL SINGLE POINT ENERGY: -74.965901")
set_property(TEST mp2                  PROPERTY PASS_REGULAR_EXPRESSION "FINAL SINGLE POINT ENERGY: -75.004854")
set_property(TEST mp3                  PROPERTY PASS_REGULAR_EXPRESSION "FINAL SINGLE POINT ENERGY: -75.015455")
set_property(TEST fci                  PROPERTY PASS_REGULAR_EXPRESSION "FINAL SINGLE POINT ENERGY: -75.020410")
set_property(TEST qdyn_1d_HO_imaginary PROPERTY PASS_REGULAR_EXPRESSION "FINAL WFN 2 ENERGY: 2.500001"         )
set_property(TEST qdyn_1d_HO_real      PROPERTY PASS_REGULAR_EXPRESSION "FINAL WFN 0 ENERGY: 1.124931"         )
set_property(TEST qdyn_2d_HO_imaginary PROPERTY PASS_REGULAR_EXPRESSION "FINAL WFN 2 ENERGY: 2.000001"         )
set_property(TEST qdyn_2d_HO_real      PROPERTY PASS_REGULAR_EXPRESSION "FINAL WFN 0 ENERGY: 2.249863"         )
set_property(TEST qdyn_3d_HO_imaginary PROPERTY PASS_REGULAR_EXPRESSION "FINAL WFN 2 ENERGY: 2.500001"         )
set_property(TEST qdyn_3d_HO_real      PROPERTY PASS_REGULAR_EXPRESSION "FINAL WFN 0 ENERGY: 3.374795"         )

# add random tests
add_test(NAME random_qdyn_1d_ds_1              COMMAND ${CMAKE_MAKE_PROGRAM} random_qdyn_1d_ds_1              WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME random_qdyn_1d_ts_1              COMMAND ${CMAKE_MAKE_PROGRAM} random_qdyn_1d_ts_1              WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME random_qdyn_1d_tully_1           COMMAND ${CMAKE_MAKE_PROGRAM} random_qdyn_1d_tully_1           WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME random_cdyn_1d_diabatic_ds_1     COMMAND ${CMAKE_MAKE_PROGRAM} random_cdyn_1d_diabatic_ds_1     WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME random_cdyn_1d_diabatic_ts_1     COMMAND ${CMAKE_MAKE_PROGRAM} random_cdyn_1d_diabatic_ts_1     WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME random_cdyn_1d_diabatic_tully_1  COMMAND ${CMAKE_MAKE_PROGRAM} random_cdyn_1d_diabatic_tully_1  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME random_cdyn_1d_adiabatic_ds_1    COMMAND ${CMAKE_MAKE_PROGRAM} random_cdyn_1d_adiabatic_ds_1    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME random_cdyn_1d_adiabatic_ts_1    COMMAND ${CMAKE_MAKE_PROGRAM} random_cdyn_1d_adiabatic_ts_1    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)
add_test(NAME random_cdyn_1d_adiabatic_tully_1 COMMAND ${CMAKE_MAKE_PROGRAM} random_cdyn_1d_adiabatic_tully_1 WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/example)

# add expected results of random tests
set_property(TEST random_qdyn_1d_ds_1              PROPERTY PASS_REGULAR_EXPRESSION "ADIABATIC STATE 0 POP: 0.052824")
set_property(TEST random_qdyn_1d_ts_1              PROPERTY PASS_REGULAR_EXPRESSION "ADIABATIC STATE 0 POP: 0.720077")
set_property(TEST random_qdyn_1d_tully_1           PROPERTY PASS_REGULAR_EXPRESSION "ADIABATIC STATE 0 POP: 0.676839")
set_property(TEST random_cdyn_1d_adiabatic_ds_1    PROPERTY PASS_REGULAR_EXPRESSION "ADIABATIC STATE 0 POP: 0.072000")
set_property(TEST random_cdyn_1d_adiabatic_ts_1    PROPERTY PASS_REGULAR_EXPRESSION "ADIABATIC STATE 0 POP: 0.713000")
set_property(TEST random_cdyn_1d_adiabatic_tully_1 PROPERTY PASS_REGULAR_EXPRESSION "ADIABATIC STATE 0 POP: 0.504000")
set_property(TEST random_cdyn_1d_diabatic_ds_1     PROPERTY PASS_REGULAR_EXPRESSION "DIABATIC STATE 0 POP: 0.917000" )
set_property(TEST random_cdyn_1d_diabatic_ts_1     PROPERTY PASS_REGULAR_EXPRESSION "DIABATIC STATE 0 POP: 0.177000" )
set_property(TEST random_cdyn_1d_diabatic_tully_1  PROPERTY PASS_REGULAR_EXPRESSION "DIABATIC STATE 0 POP: 0.445000" )
